version: "3.3"
services:
  bountydns:
    build:
      context: ./../../
      dockerfile: ./infra/docker/bountydns.dockerfile
    image: 3lpsy/bountydns:latest
    networks:
      bountydnspub:
    command: api-server --no-envs --db-setup -l 0.0.0.0 --db-seed-env
    env_file:
      - ${COMPOSE_ENV_DIR}/api.prod.env
    depends_on:
      - db
      - broadcast
  dns:
    image: 3lpsy/bountydns:latest
    networks:
      bountydnspub:
    command: dns-server -l 0.0.0.0 -p 53
    env_file:
      - ${COMPOSE_ENV_DIR}/dns.prod.env
    restart: on-failure:2
    depends_on:
      - bountydns
      - broadcast
      - proxy
  webui:
    build:
      context: ./../../
      dockerfile: ./infra/docker/webui.dockerfile
    image: 3lpsy/bountydns-webui:latest
    networks:
      bountydnspub:
  proxy:
    build:
      context: ./../proxy
      dockerfile: ./../docker/proxy.dockerfile
    image: 3lpsy/bountydns-proxy:latest
    env_file:
      - ${COMPOSE_ENV_DIR}/proxy.prod.env
    ports:
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:8443:8443"
    networks:
      bountydnspub:
    depends_on:
      - webui
      - bountydns
  broadcast:
    build:
      context: ./../broadcast
      dockerfile: ./../docker/broadcast.dockerfile
    image: 3lpsy/bountydns-broadcast:latest
    env_file:
      - ${COMPOSE_ENV_DIR}/broadcast.prod.env
    networks:
      bountydnspub:
    restart: on-failure:5
  db:
    image: postgres:latest
    env_file:
      - ${COMPOSE_ENV_DIR}/db.prod.env
    networks:
      bountydnspub:

networks:
  bountydnspub:
    # Use a custom driver
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.20.0/24
    driver_opts:
      com.docker.network.bridge.name: bountdnspub0
