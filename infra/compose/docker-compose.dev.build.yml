version: "3.3"
services:
  bountydns:
    build:
      context: ./../../
      dockerfile: ./infra/docker/bountydns.dockerfile
    image: 3lpsy/bountydns:latest
    networks:
      bountydnspub:
    command: api-server --debug --reload --no-envs --db-setup --db-seed -l 0.0.0.0 --db-seed-env
    env_file:
      - ./../../.env/api.dev.env
    depends_on:
      - db
      - broadcast
  dns:
    image: 3lpsy/bountydns:latest
    networks:
      bountydnspub:
    command: dns-server -l 0.0.0.0 -p 53
    env_file:
      - ./../../.env/dns.env
    restart: on-failure:2
    depends_on:
      - bountydns
      - broadcast
      - proxy
  webui:
    build:
      context: ./../../
      dockerfile: ./infra/docker/webui.dockerfile
    image: 3lpsy/bountydns-webui:latest
    networks:
      bountydnspub:
  proxy:
    build:
      context: ./../proxy
      dockerfile: ./../docker/proxy.dockerfile
    image: 3lpsy/bountydns-proxy:latest
    env_file:
      - ./../../.env/proxy.env
    networks:
      bountydnspub:
    depends_on:
      - webui
      - bountydns
  broadcast:
    build:
      context: ./../broadcast
      dockerfile: ./../docker/broadcast.dockerfile
    image: 3lpsy/bountydns-broadcast:latest
    env_file:
      - ./../../.env/broadcast.env
    networks:
      bountydnspub:
    restart: on-failure:5
  db:
    image: postgres:latest
    env_file:
      - ./../../.env/db.env
    networks:
      bountydnspub:
  dbui:
    image: dpage/pgadmin4
    env_file:
      - ./../../.env/dbui.env
    networks:
      bountydnspub:
    volumes:
      - ./../dbui/dev.servers.json:/pgadmin4/servers.json
      - ./../dbui/dev.pass.txt:/dbpass.txt
    logging:
      driver: none

  # search:
  #   image: amazon/opendistro-for-elasticsearch:latest

networks:
  bountydnspub:
    # Use a custom driver
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.20.0/24
    driver_opts:
      com.docker.network.bridge.name: bountdnspub0
