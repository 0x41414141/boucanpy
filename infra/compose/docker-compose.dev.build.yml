version: "3.3"
services:
  bountydns:
    build:
      context: ./../../
      dockerfile: ./infra/docker/bountydns.dockerfile
    image: 3lpsy/bountydns:latest
    networks:
      bountydnspub:
    command: api-server --debug --reload --no-envs -l 0.0.0.0 --db-seed --db-setup --db-seed-env --log-level info --log-format short --second-log-level warning --force-exit
    env_file:
      - ${COMPOSE_ENV_DIR}/api.dev.env
    depends_on:
      - db
      - broadcast
  dns:
    image: 3lpsy/bountydns:latest
    networks:
      bountydnspub:
    command: dns-server -l 0.0.0.0 -p 53 --log-level info --log-format short --no-ssl-verify
    env_file:
      - ${COMPOSE_ENV_DIR}/dns.dev.env
    restart: on-failure:2
    depends_on:
      - bountydns
      - broadcast
      - proxy
  http:
    image: 3lpsy/bountydns:latest
    networks:
      bountydnspub:
    command: http-server -l 0.0.0.0 -p 80 --log-level info --log-format short --no-ssl-verify --enable-ssl --ssl-port 443 --ssl-listen 0.0.0.0
    env_file:
      - ${COMPOSE_ENV_DIR}/http.dev.env
    restart: on-failure:2
    depends_on:
      - bountydns
      - broadcast
      - proxy
  webui:
    build:
      context: ./../../
      dockerfile: ./infra/docker/webui.dockerfile
    image: 3lpsy/bountydns-webui:latest
    networks:
      bountydnspub:
  proxy:
    build:
      context: ./../proxy
      dockerfile: ./../docker/proxy.dockerfile
      args:
        VUE_APP_API_BASE: http://localhost:8080
        VUE_APP_API_URL: http://localhost:8080/api/v1
        VUE_APP_BROADCAST_BASE: http://localhost:8080
        VUE_APP_BROADCAST_URL: http://localhost:8080/broadcast
    image: 3lpsy/bountydns-proxy:latest
    env_file:
      - ${COMPOSE_ENV_DIR}/proxy.dev.env
    networks:
      bountydnspub:
    depends_on:
      - webui
      - bountydns
  broadcast:
    build:
      context: ./../broadcast
      dockerfile: ./../docker/broadcast.dockerfile
    image: 3lpsy/bountydns-broadcast:latest
    env_file:
      - ${COMPOSE_ENV_DIR}/broadcast.dev.env
    networks:
      bountydnspub:
    restart: on-failure:5
  db:
    image: postgres:latest
    env_file:
      - ${COMPOSE_ENV_DIR}/db.dev.env
    networks:
      bountydnspub:
  dbui:
    image: dpage/pgadmin4
    env_file:
      - ${COMPOSE_ENV_DIR}/dbui.dev.env
    networks:
      bountydnspub:
    volumes:
      - ./../dbui/dev.servers.json:/pgadmin4/servers.json
      - ./../dbui/dev.pass.txt:/dbpass.txt
    logging:
      driver: none

networks:
  bountydnspub:
    # Use a custom driver
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.20.0/24
    driver_opts:
      com.docker.network.bridge.name: bountdnspub0
